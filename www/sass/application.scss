$line: 27;
$column: 5.55%;
$font-size: 18;
$em: $font-size * 1;

$cover-color: #D70E0E;
$content-toc-background: #888;
$content-background: #F9F8F0;
$content-color: #333;
$comment-color: #F04F47; // #F04F47 // #FF8080 // rgba(#D70E0E, 0.5)
$comment-private-color: purple;

$chapter-color-50s: #FB8F8D;
$chapter-color-60s: #02C3DA;
$chapter-color-70s: #E8AE12; // #FF9C23
$chapter-color-80s: #0DA0F4; // #02C3DA
$chapter-color-90s: #90A99E; // #000088
$chapter-color-00s: #B7C1AC; // #C086E1
$chapter-color-10s: #7E3531;

$target-height: 6;
$target-color: rgba(#000, 0);
$dive-content-max-height: 1000000px;
$dive-comment-max-height: #{$dive-content-max-height/100};

// Compass Variables (these don't seem to work for keyframes)

$legacy-support-for-ie6: false;
$legacy-support-for-ie7: false;
$legacy-support-for-ie8: false;
$experimental-support-for-microsoft: false;
$experimental-support-for-mozilla: false;
$experimental-support-for-opera: false;
$experimental-support-for-svg: false;

$default-transition-duration: 0.25s;

// Imports

@import "compass/css3", "compass/utilities";
@import "compass/css3/user-interface"; // Shouldn't have to import individually
@import "stitch/patterns";
@import "_normalise", "_font-face", "_temp", "_keyframes", "_logic";


// Z-Indexs (this is outdated)
//
// .chap_head_fig: -1
// 	 	  .target: 9
//   .dive:before: 10
// 			    a: 10
// 	   .chap_marg: 11
// 		   .modal: 20 // change to pointer-events: none; ?


body {
	@extend html;
	font-size: #{$font-size/16}em;
	@extend %font-face-body;
	line-height: #{$line / $em};
	background: #FFA; //$content-toc-background;
	color: $content-color;
	background: $cover-color;
}

.no-overflowscrolling .main_wrapper_outer, .no-overflowscrolling .main_wrapper {
	height: auto;
    overflow: visible;
}

.main_wrapper_outer {
	@extend .main_wrapper;
	-webkit-overflow-scrolling: touch;
}

.main_wrapper {
	height: 100%;
    overflow: auto;
}

.no-overflowscrolling-fix {
	display: block;
	overflow: hidden;
	text-align: center;
	padding: 1em 0 0 0;
	color: darken($cover-color, 5%);
	// background: green;
	min-height: 100%; // interpreted differently becasue of Modernizr
}

a {
	color: #666;
	z-index: 10; // adjust this, needs to be above targets
	position: relative;
}

a:hover, a:focus, a:active {
	color: #333;
}

/* Download links */

a[href$=".pdf"]:after { content: " (PDF)"; }
a[href$=".pdf"][data-size]:after { content: " (PDF, " attr(data-size) ")"; }

.button {
	font-size: #{(4/3)}em;
	background: $content-color;
	color: #FFF;
	text-decoration: none;
	line-height: 2em;
	padding: 0 1em;
	line-height: 2;
	display: block;
	position: relative;
	float: left;
	border: 0;

	@extend .ui;
	@include text-shadow(0 1px 0 rgba(#000, 0.5));
	@include border-radius(0.25em);
}

.button:hover, .button:active, .a:hover.button, .a:active.button {
	color: #FFF;
	@include opacity(0.75);
}

.ui {
	@include user-select(none); // Need to say, user select on com, none
	// @include background-rgba(teal, 0.5);
}

.scaps {
	text-transform: lowercase;
	font-variant: small-caps;
}

header {
	text-rendering: optimizeLegibility;
	font-style: normal;
	font-weight: normal;
}

h1, h2, h3, h4, h5, h6, strong {
	font-weight: normal;
}

.h_title {
	font-weight: normal;
}

.h_subtitle {
	@extend %font-face-head;
}

.h_citetitle {
	font-size: 1em;
}

/* Targets for Dive */

.target {
	position: relative;
	cursor: pointer;
	padding: #{($target-height)}em 0;
	margin: #{($target-height * -1)}em 0;
	z-index: 1;
	background: $target-color;

	@extend .ui;
	// don't hardware accelerate
}

/* Dive Main Arrow */

.dive_icon {
	content: "";
	display: block;
	width: 0.75em;
	height: 0.75em;
	position: absolute;
	right: 1.78em; // needed to center over small triangle which is set at 2em as in comps
	margin: #{($em / -2)}px 0 0 0;
	border: 1px solid $comment-color;
	border-width: 3px 0 0 3px;
	background: $content-background;
	z-index: 10;

	@include box-shadow(inset 1px 1px 0 rgba(#FFF, 0.33));
	// @include animation(diveCommentBackground 5s 1 normal ease-in-out none 0);
	// @include enable-hardware-acceleration; // Will overwrite next line if last
	@include transform(rotate(45deg));
}

.dive__open > .dive_icon, .target:focus > .dive_icon {
	border-width: 0 3px 3px 0;
	background: $content-background;
	@include box-shadow(none);
	// @include animation(none);
}

.cover_outer > .dive_icon {
	background: $cover-color;
	@include animation(diveCoverBackground #{$default-transition-duration * 3} 1 normal ease-in none 0);
}

.cover_outer.dive.dive__open > .dive_icon {
	background: $cover-color;
	@include animation(none); // necessary for animation to work properly
}


.dive > .dive_icon {
	// @include animation(diveDecadeBackground #{$default-transition-duration * 3} 1 normal ease-in none 0);
	@include transition(background #{$default-transition-duration * 2} ease-out 0);
} // This works for decades, won't work for chap, year or com
  // They need to go through a middle stage
  // (red, yellow, red / colour, content, colour / content, white, content)

.dive.dive__open > .dive_icon {
	@include transition(none);
}

.chapterItem_outer > .dive_icon {
	// @include animation(diveYearBackground 5s 1 normal ease-in-out none 0);
}

.chapterItem_outer.dive__open > .dive_icon {
}

.com > .dive_icon {
	// @include animation(diveComBackground 5s 1 normal ease-in-out none 0);
}

/* Dives */

.dive {
	border: {
		top: 1px solid $comment-color;
		bottom: 1px solid $comment-color;
	}
	width: 100%;
	height: auto;
	max-height: auto;
	background: $content-background;

	@include box-shadow(0 1px 0 rgba(#FFF, 0.33));
	@include box-sizing(border-box);
}

.dive__open, .dive:focus, .dive__tease {
	@include box-shadow(none);
}

.dive_wrapper {
	display: block;
	max-height: 0;
    width: 100%;
    overflow: hidden;
	// @include animation(diveClose #{$default-transition-duration * 3} 1 normal ease-out none 0); // This is the main accordion transition
	@include enable-hardware-acceleration;

	@include transition(max-height #{$default-transition-duration * 4} ease-in-out); // re-testing animation versus transition
}

.dive__open > .dive_wrapper, .dive:focus > .dive_wrapper {
	max-height: $dive-comment-max-height;
	// @include animation(diveOpen #{$default-transition-duration * 3} 1 normal ease-in none 0);
	@include enable-hardware-acceleration;
}

.dive.dive__tease > .dive_wrapper {
	// @include transition(none #{$default-transition-duration} 5 linear); // re-testing animation versus transition
	max-height: 250em; // needs extra .dive class for higher specificity, as .dive__open and .dive__tease will get applied
}

/* Dive Mini-Triangle */

.dive:after {
	content: "";
	display: block;
	position: absolute;
	float: left;
	border: 0.25em solid transparent;
	border-top-color: $comment-color;
	right: 2em; // 36px
	width: 0;
	height: 0;
	z-index: 10;
}

.dive__open:after, .dive:focus:after, .dive__tease:after {
	margin: 1px 0 0 0;
	@include transform(rotate(180deg));
}

.dive_count {
	font: {
		size: #{13.5 / $em}em;
		size-adjust: 0.5;
	}
	@extend %font-face-aside;
	display: block;
	float: right;
	height: 1em;
	margin: -1.5em 0 0 0;
	padding: 0 1em 0 0.5em;
	color: $comment-color;
}

.dive__open .dive_count, .dive:focus .dive_count {
}

/* Year Colours */

@for $i from 5 through 11 {
	.toc_item_head.y_#{(($i * 10) + 1900)}s,
	.y_#{(($i * 10) + 1900)}s .decade_toc, .y_#{(($i * 10) + 1900)}s .yearItem {
		background-color: yearColor(#{(($i * 10) + 1900)});
		// @include background-image-retina(svg, #{(($i * 10) + 1900)}, decade-tile, svg, auto, auto, header, #{(($i * 10) + 1900)}, background, png, #{1024/$em}em, #{768/$em}em);
	} // For .dive__open, send to keyframe animation from dive
	  // or delay?

	.y_#{(($i * 10) + 1900)}s > .dive > .dive_icon,
	.y_#{(($i * 10) + 1910)}s > .dive.dive__open > .dive_icon {
		background-color: yearColor(#{(($i * 10) + 1910)});
	}

	/* Year Colours - huge CSS bloat right now */

	@for $j from 1 through 10 {

		.y_#{(1900) + ($i * 10)}s .yearItem:nth-child(#{$j}) {
			background: lighten(yearColor("#{(1900) + ($i * 10)}"), $j*3);
		}

		.y_#{(1900) + ($i * 10)}s .yearItem:nth-child(#{$j}) .chapterItem_outer.dive > .dive_icon {
			background: lighten(yearColor("#{(1900) + ($i * 10)}"), ($j + 1)*3);
		}

		.y_#{(1900) + ($i * 10)}s .yearItem:nth-child(#{$j}) .chapterItem_outer.dive__open > .dive_icon {
			background: lighten(yearColor("#{(1900) + ($i * 10)}"), $j*3);
		}

	}
}

/* Table of Contents Intro */

#decadeIntro { // change to class, maybe intro toc_intro?
	width: #{$column * 12};
	margin: 0 #{$column * 1} 0 #{$column * 5};
}

/* Table of Contents */

.toc, .decade {
	display: block;
	position: relative;
	padding: 0 0 5em 0;
}

.toc_item {
	display: block;
	height: auto;
}

.decade_toc {
}

.decade_toc_wrapper {
	// default styles in dive_wrapper
}

.toc_item_head {
	@extend %font-face-aside;
	height: 10em;
	color: #FFF;
	background: {
		repeat: repeat, no-repeat;
	}
}

.toc_item_head_year {
	font: {
		size: 4em;
	}
	@extend %font-face-head;
	display: block;
	float: left;
	position: relative;
	opacity: 0.75;
	width: #{$column * 5};
	text-align: right;
	padding: 0 0.125em 0 0;

	@include user-select(none);
	@include box-sizing(border-box);
}

.toc_item_head_title {
	font: {
		size-adjust: 0.5;
	}
	@extend %font-face-subhead;
	letter-spacing: 0.05em;
	position: relative;
	float: left;
	padding: 1em 0 0 0.5em;
	width: #{$column * 12};

	@include box-sizing(border-box);
}

.toc_item_intro {
	width: #{$column * 12};
	padding: 0 0.5em;
	float: left;

	@include box-sizing(border-box);
}

/* Table of Contents - Year listings */

.toc_years, .yearTOC {
}

.toc_year, .yearItem {
	background: $content-background;
	display: block;
//	position: relative;
	padding-top: 10em;
}

.toc_year:after, .yearItem:after {
	content: "";
	display: block;
	clear: both;
}

.com_year_wrap { // change to .toc_year_head
	display: block;
	position: relative;
	max-width: #{$column * 10};
	margin: 0 0 0 #{$column * 2};
	padding: 0 0.5em;

	@include background-rgba(#FFF, 0.75);
	@include box-sizing(border-box);
}

.toc_years_item .chap, .yearItem .chap {
	// overflow: hidden; // ?
}

.chapterItem_outer { // rename

}

.chapterItem { // rename
	// default styles in dive_wrapper
}

/* Chapters */

.chap {
	float: left;
	clear: both;
	width: 100%;
	// max-height: 0;
	height: auto;
	background: $content-background;

	@include box-sizing(border-box);
	@include transition(all, max-height $default-transition-duration, #{($default-transition-duration * 3)});
} // What a nice chap!

.chap.dive__open {
	// This moves the :before arrow, might not make sense anyway for years accordion
	// padding: #{($target-height * 0.5)}em 0;
	padding-bottom: 5em;
}

.chap_head {
	width: #{($column * 15)};
	margin: 0 0 2em 0;
}

.chap_head_group {
	width: #{($column * 13)};
	padding: 0.5em 0;
	top: 16em;
	display: block;
	position: absolute;

	@include background-rgba(#FFF, 0.75);
	@include box-sizing(border-box);
}

.chap_head_group .h_subtitle {
	text-transform: uppercase;
	border-bottom: 1px solid #000;
	padding: 0 0 0 #{($column * (13/10))};
	margin: 0 0 #{(1/3)}em 0;
	float: left;
}

.chap_head_group .h_title {
	line-height: #{(4/3)};
	padding: 0 #{($column * (13/10))};
	clear: left;
}

.chap_head_fig {
	z-index: -1;
}

/* Main Sections */

.chap_sec {
	margin: 0 0 0 #{($column * 3)};
	width: #{($column * 12)};

	@include box-sizing(border-box);
}

.chap_lead, .chap :first-child .chap_sec:first-child p:first-of-type {
	font-size: #{22.5 / $em}em;
	line-height: 1.5;
}

.chap_sec {
	margin-top: 0.25em;
	margin-bottom: 0.25em;
}

.chap_sec p + p, .chap_marg + .chap_sec > p:first-child {
	// text-indent: 1.5em; // check on this, 1em is apparently standard for print, 2 for the web?
} // indent for paragraph following paragraph, paragraph "following" periferal content

.chap_sec blockquote {
	margin: 1em 0;
    border-left: 0.5em solid $content-color;
    font-style: italic;
    padding: 0 0 0 1em;
}

.chap_sec cite {
	display: block;
    margin: 1em 0 0 0;
    font-style: normal;
}

.chap_sec q:before {
}

.chap_sec q:after {
}

/* Chapter Section Main Images */

.chap_sec_fig {
	// This makes the figure break outside of the main column.
	// Since the inner column is 12 out of 18, it's 2/3 of the full width,
	// multiply by 1.5 to make the column variable work again.

	width: #{(($column * 14) * (3/2))};
	left: #{($column * 1) * (-3/2)};
	margin: 1em auto;
}

.chap_sec_fig__left, .chap_sec_fig__right {
	width: #{($column * 15) * (3/2)};
	left: #{($column * 3) * (-3/2)};
}

.chap_sec_fig__right {
	left: auto;
}

.chap_sec_fig_cap {
	font-size: #{(13.5 / $em)}em;
	color: #333;
	padding: 0.75em;
	line-height: #{(4/3)}em;
	position: absolute;
	bottom: 0;
	right: 0;
	margin: 0;
	min-width: 35%;
	max-width: 50%;

	@include background-rgba(#FFF, 0.75);
	@include box-sizing(border-box);
}

.chap_sec_fig__right .chap_sec_fig_cap {
	left: 0;
	right: auto;
}

.chap_sec_fig__portrait {
	float: right;
	max-width: #{((($column * 6) * (3/2)))};
	height: 100%;
	overflow: hidden;
	margin-right: #{((($column * 3) * (-3/2)) - 0.1)}; // -0.1 is for rounding
	margin-left: 1.5em;
}

.chap_sec_fig__portrait .chap_sec_fig_cap {
	max-width: 100%;
}

.chap_sec_fig__landscape {
}

/* chap_sec_fig svg */

.chap_sec_fig_shape {
	position: absolute;
	overflow: hidden;
	opacity: #{(1/3)};
	top: 2em;
	left: #{($column * 2) * (2 / (-3/2))};
	padding-right: #{($column * 2) * (2 * (3/2))};

	// @include transform(scale(1.25));
	@include box-sizing(border-box);
}

/* Marginal Images */

.chap_marg_fig {
	margin: 0 0 1em 0;
}

.chap_marg_fig_cap {
	color: #666;
	padding: 0.5em 0;
}

/* Comments */

.com {
	background: #FFF;
	border-color: $comment-color;
}

.com_wrapper {
	// default styles in dive_wrapper
}

.com_comments {
	font: {
		size: #{13.5 / $em}em;
		size-adjust: 0.5;
		weight: normal;
		style: normal;
	}
	@extend %font-face-aside;
	width: #{($column * 16)};
	margin: 0 auto;
	position: relative;
	list-style-type: none;
	display: block;
	padding: 0;

	// @include enable-hardware-acceleration;
}

.com_comments_comment {
	float: left;
	position: relative;
	width: #{(100%/3)}; // check how this works with the columns
	padding: 0.5em 0; // quarter em padding here, three quarters for animation on .com_wrapper
	display: block;
}

.com_comments_comment_wrap {
	border-left: #{(1/3)}em solid $comment-color;
	padding: 0 #{(4/3)}em 1em 1em;
}

.com_comments_comment_cite {
	@extend %font-face-body;
	font: {
		size: #{$em / 13.5}em;
		size-adjust: 0;
	}
	margin: 0.5em 0 0 0;
	display: block;

	// include hyphenation; // Yay, broke this again.
}

.com_comments_comment_reply {
	line-height: 1.5;
	display: block;
	text-decoration: none;
	color: #333;
	padding: 1em;
	width: #{(100%/3)};
	margin: -1em 1em 0 -1em;
	float: left;
}

.com_comments_comment_reply_icon {
	width: 1.5em;
	float: left;
	display: block;
	margin: 0 0.5em 0 0;
	text-align: center;
	background: $comment-color;
	color: #FFF;
}

.com_comments_actions {
	margin: 1em 0;
	clear: left;
	float: left;
	width: 100%;
}

.com_comments_actions_items {
	list-style: none;
	float: right;
}

.com_comments_actions_item {
	float: left;
	margin: 0 0 0 2em;
	line-height: 2.5;
}

.com .button {
	background: $comment-color;
	float: right;
}

@media screen and (min-width: 1024px) { // Check media queries in Sass

	.com_comments {
		width: #{($column * 14)};
	}

	.com_comments_comment {
		// width: #{($column * 4)}; // check how this works with the columns
		width: #{(207/908 * 100%)}; // Px to % from Fireworks, better way?
	}

	.com_comments_comment:last-of-type {
		width: #{(441/908 * 100%)}; // Px to % from Fireworks, better way?
	} // should actually be a __class for whatever the longest/most popular, whatever comment is. Probably shouldn't be the middle one.

	.com_comments_comment:last-of-type .com_comments_comment_wrap {
		font-size: #{(4/3)}em; // Change font-size here instead since it won't mess up reply button then
		border-left: 0.5em solid $comment-color; // should this be px?
		padding: 0 0.75em 0.75em 0.75em;
	}

	.com_comments_comment:last-of-type .com_comments_comment_cite {
		font-size: 1em;
	}

}

/* Forms, move to normalise later? */

form {
}

label {
	font: {
		size: #{(13.5 / $em)}em;
	}
	@extend %font-face-aside-bold;
	float: left;
	clear: left;
	width: #{($column * 2) * (18/14)}; // should be column * 2
	line-height: 2.56; // should be #{(($em * 2) / 13.5)}
	border-bottom: 1px solid #666;
	padding: 0 1em 0 0;
	text-align: right;

	@include box-sizing(border-box);
}

button {
	@extend %font-face-aside;
}

input, textarea, select {
	@extend %font-face-aside;
	width: #{($column * 12) * (18/14)}; // should be 12

	@include box-sizing(border-box);
}

input[type=text], input[type=email], input[type=tel], input[type=url] { //()
	float: left;
	line-height: 2;
	height: 2em;
	padding: 0 #{(1/3)}em;
	margin: 0 0 0.5em 0;
	background: #FFF;
	color: #555;
	border: #{1/$em}em solid #666;
	@include border-radius(#{2.5/$em}em #{2.5/$em}em #{2.5/$em}em 0);

	&:focus {
		background: #F1F1F1;
		color: $content-color;
		outline: none;
		border: #{1/$em}em solid $content-color;
		// @include transition(background, color);
		// @include box-shadow(inset 0 2.5px 2.5px rgba(black, 0.25));
	}
}

textarea {
	float: left;
	line-height: 1.5;
	padding: 0.25em #{(1/3)}em;
	border: 1px solid #666;
	min-height: 7em;
	@include border-radius(#{2.5/$em}em);

	&:focus {
		@extend input[type=text]:focus;
	}
}

input[type=submit], button {
}

.form_action_items {
	float: right;
	margin: 0.5em 0 0 #{($column * 2) * (18/14)};
}

.com_add_form .button {
	float: right;
	font-size: 1em;
	background: $comment-color;
}

.cancel {
	background: transparent;
	border: none;
	text-decoration: underline;
	font: {
		size: 0.75em;
	}
}

.modal {
	z-index: 20;
	max-height: 0;
	padding: 0 #{$column * 3} 0 #{$column * 1};
	width: 100%;
	background: #FFF;
	position: relative;
	overflow: hidden;

	// @include transition();
	@include box-sizing(border-box);
	@include animation(growIn 0.5s 1 normal ease none 0);
}

.modal__open {
	overflow: hidden;
	background: lighten($comment-color, 37.5%);
	max-height: 1000px;
	padding: {
		top: 1em;
		bottom: 1em;
	}

	border: {
		bottom: 2px solid $comment-color;
	}
}

/* Spine & Key */

@-webkit-keyframes rotate {
  from {
    @include transform(rotate(0deg));
  }
  to {
    @include transform(rotate(360deg));
  }
}

#loader {
	width: 2em;
	height: 2em;
	display: block;
	margin: 0 0 0 -2em;
	top: 10em;
	left: 50%;
	position: absolute;
	background: white;
	z-index: -2;

	// @include border-radius(0.5em);
	@include animation-name(rotate);
    @include animation-duration(2s);
    @include animation-iteration-count(infinite);
    @include animation-timing-function(linear);
}

#spine {
	width: 8px !important;
}

#key {
	@include transition(top #{$default-transition-duration * 2});
	height: 1px !important;
	width: 8px !important;
	background: white !important;
	border: {
		top: 1em solid $chapter-color-80s !important;
		bottom: 1em solid $chapter-color-80s !important;
	}
	margin: -20px 0 0 0;
	@include box-sizing(border-box);
}