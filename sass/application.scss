$line: 27;
$column: 5.55%;
$font-size: 18;
$em: $font-size * 1;

$content-fontstack-text: Georgia, serif;
$content-fontstack-head: "Din Display Pro Black", "Avenir", Verdana, sans-serif;
$content-fontstack-subhead: "Din Text Pro Bold", "Avenir", Verdana, sans-serif;
$comment-fontstack-text: "Din Text Pro Regular", "Avenir", Verdana, sans-serif;

$content-toc-background: #CCC;
$content-background: #F9F8F0; 
$content-color: #333;
$comment-color: #FF284C; // #F04F47 // #FF8080
$comment-private-color: purple;

$chapter-color-50s: #FB8F8D;
$chapter-color-60s: #02C3DA;
$chapter-color-70s: #FF9C23;
$chapter-color-80s: #02C3DA;
$chapter-color-90s: #000088;
$chapter-color-00s: #C086E1;
$chapter-color-10s: #FB8F8D;

$target_height: 5;

// Compass Variables

$default-transition-duration: 0.25s;

// Imports

@import "compass/css3", "compass/utilities";
@import "compass/css3/user-interface"; // Shouldn't have to import individually
@import "_temp", "_keyframes", "_normalise", "_functions";
@import "stitch/patterns";


//	Type Scale
//
//	13.5px
//	18.0px size
//	22.5px
//	27.0px leading
//	36.0px
//	40.5px
//	54.0px
//	63.0px

// Z-Indexs
//
// .chap_head_fig: -1
// 	 	  .target: 9
//   .dive:before: 10
// 			    a: 10
// 	   .chap_marg: 11
// 		   .modal: 20 // change to pointer-events: none; ?

* {
	-webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-touch-callout: none;
} // move to normalise?

body {
	font-size: #{$font-size/16}em;
	line-height: #{$line / $em};
	font-family: $content-fontstack-text;
	background: $content-toc-background;
	color: $content-color;
}

a {
	color: #666;
	z-index: 10; // adjust this, needs to be above targets
	position: relative;
}

a:hover, a:focus, a:active {
	color: #333;
}

/* Download links */

a[href$=".pdf"]:after { content: " (PDF)"; }
a[href$=".pdf"][data-size]:after { content: " (PDF, " attr(data-size) ")"; }

.button {
	font-size: #{(4/3)}em;
	background: $content-color;
	color: #FFF;
	text-decoration: none;
	line-height: 2em;
	padding: 0 1em;
	line-height: 2;
	display: block;
	position: relative;
	float: left;
	border: 0;

	@include text-shadow(0 1px 0 rgba(#000, 0.5));
	@include border-radius(0.25em);
}

.button:hover, .button:active, .a:hover.button, .a:active.button {
	color: #FFF;
	@include opacity(0.75);
}

.ui, .button, .target {
	// background: rgba(teal, 0.5);
	@include user-select(none); // Need to say, user select on com, none
}

.scaps {
	text-transform: lowercase;
	font-variant: small-caps;
}

header {
	text-rendering: optimizeLegibility;
	font-style: normal;
}

.h_title {
	font-weight: normal;
}

.h_subtitle {
	font-family: $content-fontstack-head;
	font-weight: 800;
}

.h_citetitle {
	font-size: 1em;
}

/* Targets for Dive */

.target {
	position: relative;
	cursor: pointer;
	padding: #{($target_height)}em 0;
	margin: #{($target_height * -1)}em 0;

	// background: rgba(teal, 0.33);
}

.target__com {
}

.target__chap {
	
}

.target__fix {
	// Getting used for year dive into chap now,
	// Change chap to year and fix to chap?
}

/* Dive Main Arrow */

.dive:before, .dive_icon {
	content: "";
	display: block;
	width: 0.75em;
	height: 0.75em;
	position: absolute;
	right: 1.78em; // needed to center over small triangle which is set at 2em as in comps
	margin: #{($em / -2)}px 0 0 0;
	border: 1px solid $comment-color;
	border-width: 3px 0 0 3px;
	background: $content-background;
	z-index: 10;
	
	@include animation(comDiveBackground 0.25s 1 normal ease-in-out none 0);
	// @include filter-gradient(#d6d6d6, #ffffff, horizontal);
	// @include background-image(linear-gradient(left top, rgba(214,214,214,1) 20%, rgba(220,220,220,1) 57%, rgba(255,255,255,0) 100%));
	@include transition(background);
	@include enable-hardware-acceleration; // Will overwrite next line if last
	@include transform(rotate(45deg));
}

.dive__open.dive:before, .dive__open .dive_icon, .target:focus .dive:before {
	border-width: 0 3px 3px 0;
	background: $content-background;
	
	@include animation(none);
}

/* Dives */
// pointer-events: none; // not for use on dive

.dive {
	// margin: -1px 0; // fixes baseline
	border-top: 1px solid $comment-color;
	border-bottom: 1px solid $comment-color;
	width: 100%;
	max-height: 0;
	background: $content-background;

	@include box-sizing(border-box);
	@include transition(all, max-height $default-transition-duration, #{($default-transition-duration * 3)});
	@include enable-hardware-acceleration;
}

.dive__open, .com:focus {	
	// New
	// margin: 0 0 #{($target_height * -1)}em 0;
	// padding-top: #{($target_height * 0.5)}em;
	max-height: 10000px;
}

/* Dive Mini-Triangle */

.dive:after {
	content: "";
	display: block;
	position: absolute;
	float: left;
	border: 4px solid transparent;
	border-top-color: $comment-color;	
	right: 2em; // 36px
	width: 0;
	height: 0;
}

.dive__open:after, .dive:focus:after {
	margin: 1px 0 0 0;
	@include transform(rotate(180deg));
	@include enable-hardware-acceleration;
}

.dive_count {
	font-size: #{13.5 / $em}em;
	font-family: $comment-fontstack-text;
	font-size-adjust: 0.5;
	
	display: block;
	float: right;
	height: 1em;
	margin: -1.5em 0 0 0;
	padding: 0 1em 0 0.5em;
	color: $comment-color;
}

.dive__open .dive_count, .dive:focus .dive_count {
}

/* Year Colours */

@for $i from 5 through 11 {
	header.y_#{(($i * 10) + 1900)}s, .y_#{(($i * 10) + 1900)}s .dive__open.dive:before {
		background: year(#{(($i * 10) + 1900)});
	} // For .dive__open, send to keyframe animation from dive
	  // or delay? 
	
	.y_#{(($i * 10) + 1900)}s .dive:before {
		background: year(#{(($i * 10) + 1910)});
	}
}

/* Table of Contents */

.toc, .decade {
	display: block;
	position: relative;
	overflow: hidden;
}

.toc_item { // markup needs to be changed
	// overflow: hidden;
	display: block;
	cursor: pointer;
	position: relative;
	display: block;
}

.toc_item_head {
	font-family: $comment-fontstack-text;
	height: 6em;
	color: #FFF;
}

.toc_item_head_year {
	display: block;
	font-size: 4em;
	font-family: $content-fontstack-head;
	float: left;
	position: relative;
	opacity: 0.75;
	width: #{$column * 5};
	text-align: right;
	padding: 0 0.125em 0 0;
	
	@include user-select(none);
	@include box-sizing(border-box);
}

.toc_item_head_title {
	font-family: $content-fontstack-subhead;
	font-size-adjust: 0.5;
	letter-spacing: 0.05em;
	position: relative;
	float: left;
	padding: 1em 0 0 0.5em;
	width: #{$column * 12};
	
	@include box-sizing(border-box);
}

.toc_item_intro {
	width: #{$column * 12};
	padding: 0 0.5em;
	float: left;

	@include box-sizing(border-box);
}

/* Table of Contents - Year listings */

.toc_years, .yearTOC {
}

.toc_years_item, .yearItem {
	overflow: hidden; // ?

	background: #999;
	border-bottom: 1px dotted black;
	max-height: 6em;
	display: block;
	position: relative;
}

.toc_years_item a, .yearItem a {
	display: block;
	max-width: #{$column * 10};
	background: rgba(#FFF, 0.75);
	margin: 1.5em 0 0 #{$column * 1};
	
	@include box-sizing(border-box);
}

.toc_years_item .chap, .yearItem .chap {
	overflow: hidden; // ?
}

/* Chapters */

.chap {
	float: left;
	clear: both;
	width: 100%;
	// max-height: 0;
	height: auto;
	background: $content-background;
	
	@include box-sizing(border-box);
	@include transition(all, max-height $default-transition-duration, #{($default-transition-duration * 3)});
} // What a nice chap!

/* This moves the :before arrow, might not make sense anyway for years accordion
.chap.dive__open {
	padding: #{($target_height * 0.5)}em 0;
}
*/

.chap_head {
	width: #{($column * 15)};
	margin: 0 0 2em 0;
}

.chap_head_group {
	width: #{($column * 13)};
	padding: 0.5em 0;
	background: #FFF;
	background: rgba(#FFF, 0.75);
	top: 16em;
	display: block;
	position: absolute;

	@include box-sizing(border-box);	
}

.chap_head_group .h_subtitle {
	text-transform: uppercase;
	border-bottom: 1px solid #000;
	padding: 0 0 0 #{($column * (13/10))};
	margin: 0 0 #{(1/3)}em 0;
	float: left;
}

.chap_head_group .h_title {
	line-height: #{(4/3)};
	padding: 0 #{($column * (13/10))};
	clear: left;
}

.chap_head_fig {
	z-index: -1;
}

/* Periferal Content */

.chap_marg {
	font-size: #{(13.5 / $em)}em;
	line-height: #{(4/3)};
	font-style: normal;
	color: #FFF;
	background: #333;

	float: left;
	width: #{($column * 9)};
	margin: 0 0 0 0; // this lines it up with the baseline in ths case, but might not always work. Test!
	padding: 1em 1.5em 1em 1em; // half gutter 
	position: absolute;
	left: -#{($column * 8.75)};
	z-index: 11;
	
	// include hyphenation; // Yay, broke this again.
	@include box-sizing(border-box);
	@include transition(left $default-transition-duration ease 0.25s);
}

.chap_marg:hover, .chap_marg:focus {
	cursor: pointer;
	left: 0;
} // these won't work on touch devices, duh

.chap_marg q {
	text-indent: -0.4em;
	margin-bottom: 0.75em;
	display: block;
}

.chap_marg:after {
	content: "\2192";
	display: block;
	width: 1.5em;
	height: 1.5em;
	background: #666;
	position: absolute;
	right: -0.75em;
	top: 40%; // must be a better way to do this?
	border: 1px solid #CCC;
	color: #CCC;
	text-align: center;
	line-height: 1.5;
	
	@include box-sizing(border-box);
}

/* Main Sections */

.chap_sec {
	margin: 0 0 0 #{($column * 3)};
	width: #{($column * 12)};
	// padding: 0 0.5em; // half-gutter, breaks figure

	@include box-sizing(border-box);
}

.chap_sec:first-child p:first-child, .chap_lead {
	font-size: #{22.5 / $em}em;
	line-height: 1.5;
}

.chap_sec p + p, .chap_marg + .chap_sec > p:first-child {
	text-indent: 1.5em; // check on this, 1em is apparently standard for print, 2 for the web?
} // indent for paragraph following paragraph, paragraph "following" periferal content

.chap_sec blockquote {
	margin: 1em 0;
    border-left: 0.5em solid $content-color;
    font-style: italic;
    padding: 0 0 0 1em;
}

.chap_sec cite {
	display: block;
    margin: 1em 0 0 0;
    font-style: normal;
}

.chap_sec q:before {
}

.chap_sec q:after {
}

/* Chapter Section Main Images */

.chap_sec_fig {
	// This makes the figure break outside of the main column.
	// Since the inner column is 12 out of 18, it's 2/3 of the full width,
	// multiply by 1.5 to make the column variable work again.
	
	width: #{(($column * 14) * (3/2))};
	left: #{($column * 1) * (-3/2)};
	margin: 1em auto;
}

.chap_sec_fig__left, .chap_sec_fig__right {
	width: #{($column * 15) * (3/2)};
	left: #{($column * 3) * (-3/2)};
}

.chap_sec_fig__right {
	left: auto;
}

.chap_sec_fig_cap {
	font-size: #{(13.5 / $em)}em;
	background: #FFF;
	background: rgba(#FFF, 0.75);
	// background: desaturate(darken($content-background, 15%), 35%);
	color: #333;
	padding: 0.75em;
	line-height: #{(4/3)}em;
	position: absolute;
	bottom: 0;
	right: 0;
	margin: 0;
	min-width: 35%;
	max-width: 50%;

	@include box-sizing(border-box);
}

.chap_sec_fig__right .chap_sec_fig_cap {
	left: 0;
	right: auto;
}

.chap_sec_fig__portrait {
	float: right;
	max-width: #{((($column * 6) * (3/2)))};
	height: 100%;
	overflow: hidden;
	margin-right: #{((($column * 3) * (-3/2)) - 0.1)}; // -0.1 is for rounding
	margin-left: 1.5em;
}

.chap_sec_fig__portrait .chap_sec_fig_cap {
	max-width: 100%;
}

.chap_sec_fig__landscape {
}

/* chap_sec_fig svg */

.chap_sec_fig_shape {
	position: absolute;
	overflow: hidden;
	opacity: #{(1/3)};
	top: 2em;
	left: #{($column * 2) * (2 / (-3/2))};
	padding-right: #{($column * 2) * (2 * (3/2))};
	
	// @include transform(scale(1.25));
	@include box-sizing(border-box);
}

/* Marginal Images */

.chap_marg_fig {
	margin: 0 0 1em 0;
}

.chap_marg_fig_cap {
	color: #666;
	padding: 0.5em 0;		
}

/* Comments */

.com {
	background: #FFF;
	border-color: $comment-color;
}

.com_wrapper {
	height: auto;
	max-height: 0;
	width: 100%;
	overflow: hidden;
	
	@include box-sizing(border-box);	
	@include transition(all, max-height $default-transition-duration, #{($default-transition-duration * 1.5)});
	@include enable-hardware-acceleration;
}

.com.dive__open .com_wrapper, .com:focus .com_wrapper {
	padding: 1em 0;
	max-height: 1000px;
}

.com_comments {
	font: {
		size: #{13.5 / $em}em;
		family: $comment-fontstack-text;
		size-adjust: 0.5;
		weight: normal;
		style: normal;		
	}
	width: #{($column * 16)};
	margin: 0 auto;
	position: relative;
	list-style-type: none;
	display: block;
	padding: 0;
	
	@include enable-hardware-acceleration;
}

.com_comments_comment {
	float: left;
	position: relative;
	width: #{(100%/3)}; // check how this works with the columns
	padding: 0.5em 0; // quarter em padding here, three quarters for animation on .com_wrapper
	display: block;
}

.com_comments_comment_wrap {
	border-left: #{(1/3)}em solid $comment-color;
	padding: 0 #{(4/3)}em 1em 1em;
}

.com_comments_comment_cite {
	font-size: #{$em / 13.5}em;
	font-family: $content-fontstack-text;
	font-size-adjust: 0;	
	margin: 0.5em 0 0 0;
	display: block;		

	// include hyphenation; // Yay, broke this again.
}

.com_comments_comment_reply {
	line-height: 1.5;
	display: block;
	text-decoration: none;
	color: #333;
	padding: 1em;
	width: #{(100%/3)};	
	margin: -1em 1em 0 -1em;
	float: left;
}

.com_comments_comment_reply_icon {
	font-weight: bold;
	width: 1.5em;
	float: left;
	display: block;
	margin: 0 0.5em 0 0;
	text-align: center;
	background: $comment-color;
	color: #FFF;
}

.com_comments_actions {
	margin: 1em 0;
	clear: left;
	float: left;
	width: 100%;
}

.com_comments_actions_items {
	list-style: none;
	float: right;
}

.com_comments_actions_item {
	float: left;
	margin: 0 0 0 2em;
	line-height: 2.5;
}

.com .button {
	background: $comment-color;
	float: right;
}

@media screen and (min-width: 1024px) { // Check media queries in Sass

	.com_comments {
		width: #{($column * 14)};
	}

	.com_comments_comment {
		// width: #{($column * 4)}; // check how this works with the columns
		width: #{(207/908 * 100%)}; // Px to % from Fireworks, better way?
	}

	.com_comments_comment:last-of-type {
		width: #{(441/908 * 100%)}; // Px to % from Fireworks, better way?
	} // should actually be a __class for whatever the longest/most popular, whatever comment is. Probably shouldn't be the middle one.
	
	.com_comments_comment:last-of-type .com_comments_comment_wrap {
		font-size: #{(4/3)}em; // Change font-size here instead since it won't mess up reply button then	
		border-left: 0.5em solid $comment-color; // should this be px?
		padding: 0 0.75em 0.75em 0.75em;
	}

	.com_comments_comment:last-of-type .com_comments_comment_cite {
		font-size: 1em;
	}
	
}

/* Forms, move to normalise later? */

form {
}

label {
	font: {
		size: #{(13.5 / $em)}em;
		weight: bold;
		family: $comment-fontstack-text;
	}
	float: left;
	clear: left;
	width: #{($column * 3)}; // should be column * 2
	line-height: 2.56; // should be #{(($em * 2) / 13.5)}
	border-bottom: 1px solid #666;
	padding: 0 1em 0 0;
	
	@include box-sizing(border-box);
}

input, textarea, select {
	width: #{($column * 15)}; // should be 12

	@include box-sizing(border-box);
}

input[type=text] {
	float: left;
	line-height: 2;
	height: 2em;
	padding: 0 #{(1/3)}em;
	border: {
		width: 0 0 0 1px;
		bottom: 1px solid #666;
	}
}

textarea {
	float: left;
	line-height: 1.5;
	padding: 0.25em #{(1/3)}em;
	border: 1px solid #666;
	border: {
		top: 0;
	}
	min-height: 7em;
}

input[type=text]:focus, textarea:focus {
	background: #FFA;
	outline: none;
	
	@include transition(background, color);
}

input[type=submit] {
	float: left;
	clear: left;
	margin: 0.5em 0;
}

.modal {
	z-index: 20;
/*
	width: #{$column * 14};
	left: #{$column * 2};
	right: #{$column * 2};
*/
	padding: 1em #{$column * 2};
	width: 100%;
	background: #FFF;
	position: relative;
	// padding: #{$column * 0.5};
	overflow: hidden;
	border: {
		bottom: 2px solid $comment-color;
	}
	
	@include box-sizing(border-box);
	@include animation(fadeIn 0.5s 1 normal ease-in-out none 0);
}

.modal__large {
	
}

.modal button {
	
}

.cancel {
	background: transparent;
	border: none;
	text-decoration: underline;
	font: {
		size: 0.75em;
	}
}

.com_add_sec {
}